volumes:
  db_storage:
  n8n_storage:
  dbadmin-data:
  openwebui_data:

networks:
  n8n:

services:
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    restart: always
    env_file:
      - .env
      - ./config/database/.env
    volumes:
      - db_storage:/var/lib/postgresql/data
    networks:
      - n8n
    ports:
      - ${POSTGRES_PORT_MAPPING}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: ${N8N_CONTAINER_NAME}
    hostname: n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    env_file:
      - .env
      - ./config/n8n/.env
    networks:
      n8n:
        aliases:
          - ${N8N_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy

  agent-api:
    build:
      context: ./agent-api
    container_name: agent-api
    hostname: agent-api
    restart: always
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - N8N_URL=http://n8n:5678
      - TEMPLATES_SERVICE_URL=http://host.docker.internal:8000
    ports:
      - "8001:8001"
    networks:
      - n8n
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - n8n
      - postgres
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8001/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    hostname: openwebui
    restart: always
    environment:
      - OPENAI_API_BASE_URL=http://agent-api:8001/v1
      - OPENAI_API_KEY=${OPENROUTER_API_KEY}
      - WEBUI_NAME=n8n Workflow Assistant
      - WEBUI_URL=http://localhost:3000
      - DEFAULT_MODELS=n8n-workflow-assistant
    ports:
      - "3000:8080"
    volumes:
      - openwebui_data:/app/backend/data
    networks:
      - n8n
    depends_on:
      - agent-api
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8080/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:7.1
    container_name: ${PGADMIN_CONTAINER_NAME}
    hostname: ${PGADMIN_HOSTNAME}
    env_file:
      - .env  
    networks:
      n8n:
        aliases:
          - ${PGADMIN_CONTAINER_NAME}
    expose:
      - ${PGADMIN_INTERNAL_PORT}
    volumes:
      - dbadmin-data:/var/lib/pgadmin

  caddy:
    image: caddy:2
    container_name: caddy
    ports:
      - "80:80"
    volumes:
      - ./config/reverse-proxy/Caddyfile:/etc/caddy/Caddyfile:ro
    env_file:
      - .env
    networks:
      - n8n
    depends_on:
      - pgadmin
      - n8n

